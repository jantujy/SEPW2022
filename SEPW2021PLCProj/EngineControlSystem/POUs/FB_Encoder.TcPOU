<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_Encoder" Id="{6012c401-bcaa-4387-b79e-99c6207e5ca8}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Encoder
VAR_OUTPUT
	fThetaMech			: LREAL;
	fOmegaMech			: LREAL;
END_VAR
VAR
	fRotationDirection	: REAL;
	fThetaMechPrev		: LREAL;
	fThetaDelta			: LREAL;
	fPpr				: REAL := 4096;
	fFreqScale			: REAL := 0.01;
	f16bitMax			: REAL := 65535;
	nCounter	 		: UINT;
	nCounterRaw			: UINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[nCounterRaw := MAIN.stInputs.nEL5101_Counter;
nCounter := nCounterRaw * 4; // Counter is multiplied by four so we get overflow when the rotor has spinned a full circle

fThetaMechPrev := fThetaMech;
fThetaMech := UINT_TO_LREAL( nCounter ) / f16bitMax * 2.0 * PI; // Counter is divided by max value of UINT times two because one circle is 2pi


// Rotation direction
fThetaDelta := fThetaMech - fThetaMechPrev;

IF fThetaDelta < 0 THEN
	fThetaMech := ( 2.0 * PI - ABS( fThetaDelta ) ) + 2.0 * PI;
END_IF

IF fThetaMechPrev < fThetaMech THEN
	fRotationDirection := 1;
ELSIF fThetaMechPrev > fThetaMech THEN
	fRotationDirection := -1;
END_IF

fOmegaMech := fRotationDirection * 2.0 * PI * ( UDINT_TO_LREAL( MAIN.stInputs.nEL5101_Frequency ) / fPpr * fFreqScale );]]></ST>
    </Implementation>
    <LineIds Name="FB_Encoder">
      <LineId Id="282" Count="8" />
      <LineId Id="304" Count="0" />
      <LineId Id="291" Count="2" />
      <LineId Id="303" Count="0" />
      <LineId Id="294" Count="0" />
      <LineId Id="306" Count="0" />
      <LineId Id="299" Count="0" />
      <LineId Id="307" Count="0" />
      <LineId Id="298" Count="0" />
      <LineId Id="301" Count="0" />
      <LineId Id="253" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>